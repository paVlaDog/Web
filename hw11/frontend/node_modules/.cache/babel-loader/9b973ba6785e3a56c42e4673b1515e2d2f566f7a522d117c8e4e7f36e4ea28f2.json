{"ast":null,"code":"import Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\";\nexport default {\n  name: 'App',\n  components: {\n    Footer,\n    Middle,\n    Header\n  },\n  data: function () {\n    return {\n      user: null,\n      posts: [],\n      users: []\n    };\n  },\n  beforeMount() {\n    if (localStorage.getItem(\"jwt\") && !this.user) {\n      this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n    }\n    axios.get(\"/api/1/posts\").then(response => {\n      this.posts = response.data;\n    });\n    axios.get(\"/api/1/users\").then(response => {\n      this.users = response.data;\n      console.log(\"I have users!\");\n      console.log(this.users[0].login);\n    });\n  },\n  beforeCreate() {\n    this.$root.$on(\"onRegister\", (login, nameUser, password) => {\n      if (!this.user) {\n        if (!login || login.trim().length < 2 || login.length > 24) {\n          this.$root.$emit(\"onRegisterValidationError\", \"Login length from 2 to 24\");\n        } else if (Object.values(this.users).map(u => u.login).includes(login)) {\n          this.$root.$emit(\"onRegisterValidationError\", \"Login is required\");\n        } else if (!nameUser || nameUser.trim().length < 1 || nameUser.length > 100) {\n          this.$root.$emit(\"onRegisterValidationError\", \"Name length from 1 to 100\");\n        } else {\n          axios.post(\"/api/1/register\", {\n            login,\n            nameUser,\n            password\n          }).then(response => {\n            this.$root.$emit(\"onEnter\", login, password);\n            console.log(response);\n          }).catch(error => {\n            this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n          });\n\n          // const id = Math.max(...Object.keys(this.users)) + 1;\n          // this.$root.$set(this.users, id, {\n          //   id, login, name: nameUser\n          // });\n          // this.$root.$emit(\"onChangePage\", \"Enter\");\n        }\n      } else {\n        this.$root.$emit(\"onRegisterValidationError\", \"You already log in\");\n      }\n    });\n    this.$root.$on(\"onEnter\", (login, password) => {\n      if (password === \"\") {\n        this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n        return;\n      }\n      axios.post(\"/api/1/jwt\", {\n        login,\n        password\n      }).then(response => {\n        localStorage.setItem(\"jwt\", response.data);\n        this.$root.$emit(\"onJwt\", response.data);\n      }).catch(error => {\n        this.$root.$emit(\"onEnterValidationError\", error.response.data);\n      });\n    });\n    this.$root.$on(\"onJwt\", jwt => {\n      localStorage.setItem(\"jwt\", jwt);\n      axios.get(\"/api/1/users/auth\", {\n        params: {\n          jwt\n        }\n      }).then(response => {\n        this.user = response.data;\n        this.$root.$emit(\"onChangePage\", \"Index\");\n      }).catch(() => this.$root.$emit(\"onLogout\"));\n    });\n    this.$root.$on(\"onLogout\", () => {\n      localStorage.removeItem(\"jwt\");\n      this.user = null;\n    });\n  }\n};","map":{"version":3,"mappings":"AASA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;IACA;IAEAC;MACA;IACA;IAEAA;MACA;MACAC;MACAA;IACA;EACA;EACAC;IACA;MACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACAF;YACAG;YAAAC;YAAAC;UACA;YACA;YACAJ;UACA;YACA;UACA;;UAEA;UACA;UACA;UACA;UACA;QACA;MACA;QACA;MACA;IACA;IAEA;MACA;QACA;QACA;MACA;MAEAD;QACAG;QAAAE;MACA;QACAC;QACA;MACA;QACA;MACA;IACA;IAEA;MACAA;MAEAN;QACAO;UACAC;QACA;MACA;QACA;QACA;MACA;IACA;IAEA;MACAF;MACA;IACA;EAEA;AACA","names":["name","components","Footer","Middle","Header","data","user","posts","users","beforeMount","axios","console","beforeCreate","login","nameUser","password","localStorage","params","jwt"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <Header :user=\"user\"/>\n        <Middle :posts=\"posts\" :users=\"users\"/>\n        <Footer/>\n    </div>\n</template>\n\n<script>\nimport Header from \"./components/Header\";\nimport Middle from \"./components/Middle\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\"\n\nexport default {\n    name: 'App',\n    components: {\n        Footer,\n        Middle,\n        Header\n    },\n    data: function () {\n        return {\n            user: null,\n            posts: [],\n            users: []\n        }\n    },\n    beforeMount() {\n        if (localStorage.getItem(\"jwt\") && !this.user) {\n            this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\n        }\n\n        axios.get(\"/api/1/posts\").then(response => {\n            this.posts = response.data;\n        });\n\n        axios.get(\"/api/1/users\").then(response => {\n          this.users = response.data;\n          console.log(\"I have users!\")\n          console.log(this.users[0].login)\n        });\n    },\n    beforeCreate() {\n      this.$root.$on(\"onRegister\", (login, nameUser, password) => {\n        if (!this.user) {\n          if (!login || login.trim().length < 2 || login.length > 24) {\n            this.$root.$emit(\"onRegisterValidationError\", \"Login length from 2 to 24\");\n          } else if (Object.values(this.users).map(u => u.login).includes(login)) {\n            this.$root.$emit(\"onRegisterValidationError\", \"Login is required\");\n          } else if (!nameUser || nameUser.trim().length < 1 || nameUser.length > 100) {\n            this.$root.$emit(\"onRegisterValidationError\", \"Name length from 1 to 100\");\n          } else {\n            axios.post(\"/api/1/register\", {\n              login, nameUser, password\n            }).then(response => {\n              this.$root.$emit(\"onEnter\", login, password);\n              console.log(response)\n            }).catch(error => {\n              this.$root.$emit(\"onRegisterValidationError\", error.response.data);\n            });\n\n            // const id = Math.max(...Object.keys(this.users)) + 1;\n            // this.$root.$set(this.users, id, {\n            //   id, login, name: nameUser\n            // });\n            // this.$root.$emit(\"onChangePage\", \"Enter\");\n          }\n        } else {\n          this.$root.$emit(\"onRegisterValidationError\", \"You already log in\");\n        }\n      });\n\n        this.$root.$on(\"onEnter\", (login, password) => {\n            if (password === \"\") {\n                this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\n                return;\n            }\n\n            axios.post(\"/api/1/jwt\", {\n                    login, password\n            }).then(response => {\n                localStorage.setItem(\"jwt\", response.data);\n                this.$root.$emit(\"onJwt\", response.data);\n            }).catch(error => {\n                this.$root.$emit(\"onEnterValidationError\", error.response.data);\n            });\n        });\n\n        this.$root.$on(\"onJwt\", (jwt) => {\n            localStorage.setItem(\"jwt\", jwt);\n\n            axios.get(\"/api/1/users/auth\", {\n                params: {\n                    jwt\n                }\n            }).then(response => {\n                this.user = response.data;\n                this.$root.$emit(\"onChangePage\", \"Index\");\n            }).catch(() => this.$root.$emit(\"onLogout\"))\n        });\n\n        this.$root.$on(\"onLogout\", () => {\n            localStorage.removeItem(\"jwt\");\n            this.user = null;\n        });\n\n    }\n}\n</script>\n\n<style>\n#app {\n\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}